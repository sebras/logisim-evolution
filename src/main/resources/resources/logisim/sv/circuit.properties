#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Beräknar sanninstabell istället för uttryck på grund av %s.
analyzeCircularError = Cirkulär referens funnen; beräknar sanninstabell istället.
analyzeConflictError = Utgångskonflikt funnen; beräknar sanninstabell istället.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Utseenderiktning
circuitAnchor = Ankare
#
# appear/AppearancePort.java
#
circuitPort = Port
#
# appear/DynamicElement.java
#
circuitLabelBottom = Botten
circuitLabelCenter = Centrum
circuitLabelLeft = Vänster
circuitLabelNone = Ingen etikett
circuitLabelRight = Höger
circuitLabelTop = Toppen
circuitShowLabelAttr = Etikettposition
#
# Circuit.java
#
changeComponentAttributesAction = Åtgärd som ändrar ett komponentattribut
ComponentLabelCollisionError = En komponent i kretsen har samma etikett som komponentnamnet för den nyss placerade kompnenten. Denna etikett har tagits bort!
ComponentLabelEqualCircuitName = Den angavna etiketten är densamma som kretsnamnet. Detta är inte tillåte. Ange ett annat namn.
ComponentLabelNameError = Etiketten motsvara ett komponentnamn som används i kretsen!\n Använde etiketter som inte är desamma som komponentnamnen.
UsedLabelNameError = Det finns redan en komponent med denna etikett!\n Använd unika etiketter i en krets.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Utseende
circuitCustomAppearance = Anpassa
circuitIsVhdl = Referens till VHDL-arkitektur?
circuitLabelAttr = Delad etikett
circuitLabelDirAttr = Delad etikettsriktning
circuitLabelFontAttr = Delat etikettstypsnitt
circuitLabelLocAttr = Etikettsplats
circuitName = Kretsnamn
circuitNamedBoxFixedSize = Använd fix boxstorlek
CircuitSameInputOutputLabel = Kretsnamn är detsamma som en etikett för en ingång eller utgång. Ange ett annat kretsnamn.
circuitVhdlPath = Sökväg för VHDL-arkitekturfil
EmptyNameError = Varje krets måste ha ett namn. Tomma namn är inte tillåtna. Ange ett icke-tomt kretsnamn.
#
# CircuitMutation.java
#
unknownChangeAction = Ändra krets
#
# RadixOption.java
#
radix10Signed = Decimal med tecken
radix10Unsigned = Teckenlös decimal
radix16 = Hexadecimal
radix2 = Binär
radix8 = Oktal
radixAttr = Bas
#
# Splitter.java
#
splitterCombinedTip = Kombinerat slut av uppdelare
splitterSplit0Tip = Inga bitar från kombinterat slut
splitterSplit1Tip = Bit %s från combinerat slut
splitterSplitManyTip = Bitar %s från kombinerat slut
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Utseende
splitterAppearanceCenter = Centrerad
splitterAppearanceLeft = Vänsterhänt
splitterAppearanceLegacy = Föråldrad
splitterAppearanceRight = Högerhänt
splitterBitAttr = Bit %s
splitterBitNone = Ingen
splitterBitWidthAttr = Bitbredd in
splitterFanOutAttr = Fan-out
splitterSpacing = Mellanrum
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Distribuera stigande
splitterDistributeDescending = Distribuera fallande
#
# SplitterFactory.java
#
splitterComponent = Uppdelare
#
# SubcircuitFactory.java
#
subcircuitViewItem = Vy %s
#
# Wire.java
#
wireDirectionAttr = Riktning
wireDirectionHorzOption = Horisontell
wireDirectionVertOption = Vertikal
wireLengthAttr = Längd
#
# WireFactory.java
#
wireComponent = Sladd


